{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","userList","map","currentUser","find","App","useState","todosFromServer","todoList","setTodo","select","basicData","setData","titleError","setTitileError","selectError","setSelectError","handleChange","event","currentTarget","value","action","method","onSubmit","preventDefault","usersFromServer","currentUserId","undefined","reduce","max","item","trim","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c925001.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  user: User\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  userList: User[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, userList }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        const currentUser\n          = userList.find(user => user.id === todo.userId);\n\n        if (!currentUser) {\n          return null;\n        }\n\n        return (\n          <TodoInfo todo={todo} user={currentUser} />\n        );\n      })}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todoList, setTodo] = useState(todosFromServer);\n  const [basicData, setData] = useState({\n    title: '',\n    select: '0',\n  });\n  const [titleError, setTitileError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const handleChange = (event:\n  React.ChangeEvent<HTMLSelectElement> |\n  React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'title' && value) {\n      setTitileError(false);\n    }\n\n    if (name === 'select' && value !== '0') {\n      setSelectError(false);\n    }\n\n    setData({\n      ...basicData,\n      [name]: value,\n    });\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    if (!basicData.title) {\n      setTitileError(true);\n    }\n\n    if (basicData.select === '0') {\n      setSelectError(true);\n    }\n\n    const currentUser = usersFromServer\n      .find(user => user.name === basicData.select);\n\n    const currentUserId = currentUser !== undefined\n      ? currentUser.id\n      : null;\n\n    if (!currentUserId || !basicData.title) {\n      return;\n    }\n\n    const maxId = todoList\n      .reduce((max, item) => (item.id > max ? item.id : max), 0);\n\n    const todo = {\n      id: maxId + 1,\n      title: basicData.title.trim(),\n      completed: false,\n      userId: currentUserId,\n    };\n\n    setTodo([...todoList, todo]);\n\n    setData({\n      title: '',\n      select: '0',\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              name=\"title\"\n              value={basicData.title}\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={(event) => {\n                handleChange(event);\n              }}\n            />\n          </label>\n\n          {titleError\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={basicData.select}\n              name=\"select\"\n              onChange={(event) => {\n                handleChange(event);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {[...usersFromServer].map(user => (\n                <option\n                  id={`${user.id}`}\n                  value={user.name}\n                  data-username={user.username}\n                  data-email={user.email}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {selectError\n          && (<span className=\"error\">Please choose a user</span>)}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} userList={usersFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}